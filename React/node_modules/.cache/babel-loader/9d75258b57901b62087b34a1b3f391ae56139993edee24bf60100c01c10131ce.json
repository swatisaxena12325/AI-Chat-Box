{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\samar\\\\OneDrive\\\\Documents\\\\AI\\\\PYTHON\\\\AI Chat Box\\\\React\\\\src\\\\app.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [userInput, setUserInput] = useState('');\n  const [chatHistory, setChatHistory] = useState([]);\n  const sendMessage = async () => {\n    if (!userInput.trim()) return;\n\n    // Update chat history with user's message\n    setChatHistory([...chatHistory, {\n      message: userInput,\n      fromUser: true\n    }]);\n    setUserInput('');\n    try {\n      // Send user's message to backend\n      const response = await axios.post('/chat', {\n        message: userInput\n      });\n      // Update chat history with AI's response\n      setChatHistory([...chatHistory, {\n        message: response.data.message,\n        fromUser: false\n      }]);\n    } catch (error) {\n      console.error('Error sending message:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-history\",\n        children: chatHistory.map((chat, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${chat.fromUser ? 'user' : 'ai'}`,\n          children: chat.message\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Type a message...\",\n          value: userInput,\n          onChange: e => setUserInput(e.target.value),\n          onKeyPress: e => {\n            if (e.key === 'Enter') sendMessage();\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendMessage,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"8JCQl5xD5McSCo8u2lCNzmk0Xrc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","App","_s","userInput","setUserInput","chatHistory","setChatHistory","sendMessage","trim","message","fromUser","response","post","data","error","console","className","children","map","chat","index","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onKeyPress","key","onClick","_c","$RefreshReg$"],"sources":["C:/Users/samar/OneDrive/Documents/AI/PYTHON/AI Chat Box/React/src/app.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [userInput, setUserInput] = useState('');\r\n  const [chatHistory, setChatHistory] = useState([]);\r\n\r\n  const sendMessage = async () => {\r\n    if (!userInput.trim()) return;\r\n\r\n    // Update chat history with user's message\r\n    setChatHistory([...chatHistory, { message: userInput, fromUser: true }]);\r\n    setUserInput('');\r\n\r\n    try {\r\n      // Send user's message to backend\r\n      const response = await axios.post('/chat', { message: userInput });\r\n      // Update chat history with AI's response\r\n      setChatHistory([...chatHistory, { message: response.data.message, fromUser: false }]);\r\n    } catch (error) {\r\n      console.error('Error sending message:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"chat-container\">\r\n        <div className=\"chat-history\">\r\n          {chatHistory.map((chat, index) => (\r\n            <div key={index} className={`message ${chat.fromUser ? 'user' : 'ai'}`}>\r\n              {chat.message}\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className=\"input-container\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Type a message...\"\r\n            value={userInput}\r\n            onChange={(e) => setUserInput(e.target.value)}\r\n            onKeyPress={(e) => {\r\n              if (e.key === 'Enter') sendMessage();\r\n            }}\r\n          />\r\n          <button onClick={sendMessage}>Send</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}